// lib/main.dart
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // This file was generated by flutterfire_cli
import 'package:ascenity_app/widgets/auth_gate.dart';
import 'package:ascenity_app/providers/theme_provider.dart';
import 'package:ascenity_app/screens/onboarding_screen.dart';
import 'package:provider/provider.dart'; // <-- FIXED IMPORT
import 'package:ascenity_app/providers/mood_streak_provider.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() async {
  // Ensure Flutter bindings are initialized
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  bool _seenOnboarding = false;
  bool _loadingPrefs = true;

  @override
  void initState() {
    super.initState();
    _loadPrefs();
  }

  Future<void> _loadPrefs() async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      _seenOnboarding = prefs.getBool('seen_onboarding') ?? false;
      _loadingPrefs = false;
    });
  }

  @override
  Widget build(BuildContext context) {
    // Ensure the ThemeProvider is available to the widget tree by
    // providing it here and consuming it with a Consumer so we don't
    // attempt to read it before it's mounted.
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => ThemeProvider()),
        ChangeNotifierProvider(create: (_) => MoodStreakProvider()),
      ],
      child: Consumer<ThemeProvider>(
        builder: (context, themeProvider, _) {
          return MaterialApp(
            title: 'Ascenity',
            debugShowCheckedModeBanner: false,
            theme: themeProvider.lightTheme,
            darkTheme: themeProvider.darkTheme,
            themeMode: themeProvider.themeMode,
            home: _loadingPrefs
                ? const SizedBox.shrink()
                : _seenOnboarding
                    ? const AuthGate()
                    : OnboardingScreen(
                        onGetStarted: () {
                          setState(() {
                            _seenOnboarding = true;
                          });
                        },
                      ),
          );
        },
      ),
    );
  }
}

// MaterialColor helper moved to `AppTheme._createMaterialColor`.